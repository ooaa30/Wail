/*
 * generated by Xtext 2.22.0
 */
package org.xtext.wesnoth.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.wesnoth.ide.contentassist.antlr.internal.InternalWailParser;
import org.xtext.wesnoth.services.WailGrammarAccess;

public class WailParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(WailGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, WailGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getGroupingAccess().getGroupingValAlternatives_2_0(), "rule__Grouping__GroupingValAlternatives_2_0");
			builder.put(grammarAccess.getWhenRulesAccess().getAlternatives(), "rule__WhenRules__Alternatives");
			builder.put(grammarAccess.getGoalAccess().getAlternatives(), "rule__Goal__Alternatives");
			builder.put(grammarAccess.getDefualt_CAAccess().getCaTypeAlternatives_0_0(), "rule__Defualt_CA__CaTypeAlternatives_0_0");
			builder.put(grammarAccess.getRuleAccess().getGroup(), "rule__Rule__Group__0");
			builder.put(grammarAccess.getRuleAccess().getGroup_8(), "rule__Rule__Group_8__0");
			builder.put(grammarAccess.getGroupingAccess().getGroup(), "rule__Grouping__Group__0");
			builder.put(grammarAccess.getFragmentAccess().getGroup(), "rule__Fragment__Group__0");
			builder.put(grammarAccess.getConditionalAccess().getGroup(), "rule__Conditional__Group__0");
			builder.put(grammarAccess.getRecruitmentAccess().getGroup(), "rule__Recruitment__Group__0");
			builder.put(grammarAccess.getRecruitmentAccess().getGroup_2(), "rule__Recruitment__Group_2__0");
			builder.put(grammarAccess.getRecruitmentAccess().getGroup_3(), "rule__Recruitment__Group_3__0");
			builder.put(grammarAccess.getRecruitmentAccess().getGroup_4(), "rule__Recruitment__Group_4__0");
			builder.put(grammarAccess.getIDEqualsAccess().getGroup(), "rule__IDEquals__Group__0");
			builder.put(grammarAccess.getDamageAccess().getGroup(), "rule__Damage__Group__0");
			builder.put(grammarAccess.getAtLocationAccess().getGroup(), "rule__AtLocation__Group__0");
			builder.put(grammarAccess.getUnitEqualsAccess().getGroup(), "rule__UnitEquals__Group__0");
			builder.put(grammarAccess.getGoalAccess().getGroup_0(), "rule__Goal__Group_0__0");
			builder.put(grammarAccess.getProtectLeaderAccess().getGroup(), "rule__ProtectLeader__Group__0");
			builder.put(grammarAccess.getProtectUnitIDAccess().getGroup(), "rule__ProtectUnitID__Group__0");
			builder.put(grammarAccess.getProtectUnitTypeAccess().getGroup(), "rule__ProtectUnitType__Group__0");
			builder.put(grammarAccess.getProtectLocationAccess().getGroup(), "rule__ProtectLocation__Group__0");
			builder.put(grammarAccess.getGoaLocationAccess().getGroup(), "rule__GoaLocation__Group__0");
			builder.put(grammarAccess.getAggressionAccess().getGroup(), "rule__Aggression__Group__0");
			builder.put(grammarAccess.getCautionAccess().getGroup(), "rule__Caution__Group__0");
			builder.put(grammarAccess.getUNITLISTAccess().getGroup(), "rule__UNITLIST__Group__0");
			builder.put(grammarAccess.getUNITLISTAccess().getGroup_0(), "rule__UNITLIST__Group_0__0");
			builder.put(grammarAccess.getDECIMALAccess().getGroup(), "rule__DECIMAL__Group__0");
			builder.put(grammarAccess.getCOMMAINTAccess().getGroup(), "rule__COMMAINT__Group__0");
			builder.put(grammarAccess.getCOMMAINTAccess().getGroup_0(), "rule__COMMAINT__Group_0__0");
			builder.put(grammarAccess.getDefualt_CAAccess().getGroup(), "rule__Defualt_CA__Group__0");
			builder.put(grammarAccess.getDefualt_CAAccess().getGroup_1(), "rule__Defualt_CA__Group_1__0");
			builder.put(grammarAccess.getModelAccess().getElementsAssignment(), "rule__Model__ElementsAssignment");
			builder.put(grammarAccess.getRuleAccess().getNameAssignment_1(), "rule__Rule__NameAssignment_1");
			builder.put(grammarAccess.getRuleAccess().getFragmentsAssignment_3(), "rule__Rule__FragmentsAssignment_3");
			builder.put(grammarAccess.getRuleAccess().getGoalsAssignment_4(), "rule__Rule__GoalsAssignment_4");
			builder.put(grammarAccess.getRuleAccess().getAggressionvalAssignment_5(), "rule__Rule__AggressionvalAssignment_5");
			builder.put(grammarAccess.getRuleAccess().getCautionvalAssignment_6(), "rule__Rule__CautionvalAssignment_6");
			builder.put(grammarAccess.getRuleAccess().getGroupingValAssignment_7(), "rule__Rule__GroupingValAssignment_7");
			builder.put(grammarAccess.getRuleAccess().getUnitsAssignment_8_1(), "rule__Rule__UnitsAssignment_8_1");
			builder.put(grammarAccess.getGroupingAccess().getGroupingValAssignment_2(), "rule__Grouping__GroupingValAssignment_2");
			builder.put(grammarAccess.getFragmentAccess().getConditionAssignment_0(), "rule__Fragment__ConditionAssignment_0");
			builder.put(grammarAccess.getFragmentAccess().getDefualt_casAssignment_2(), "rule__Fragment__Defualt_casAssignment_2");
			builder.put(grammarAccess.getConditionalAccess().getXAssignment_1(), "rule__Conditional__XAssignment_1");
			builder.put(grammarAccess.getRecruitmentAccess().getUnitslistAssignment_1(), "rule__Recruitment__UnitslistAssignment_1");
			builder.put(grammarAccess.getRecruitmentAccess().getTurnsAssignment_2_1(), "rule__Recruitment__TurnsAssignment_2_1");
			builder.put(grammarAccess.getRecruitmentAccess().getImportanceAssignment_3_1(), "rule__Recruitment__ImportanceAssignment_3_1");
			builder.put(grammarAccess.getRecruitmentAccess().getNumberAssignment_4_1(), "rule__Recruitment__NumberAssignment_4_1");
			builder.put(grammarAccess.getIDEqualsAccess().getUnitIDAssignment_2(), "rule__IDEquals__UnitIDAssignment_2");
			builder.put(grammarAccess.getBaselineAccess().getAlwaysAssignment(), "rule__Baseline__AlwaysAssignment");
			builder.put(grammarAccess.getDamageAccess().getHealthAssignment_2(), "rule__Damage__HealthAssignment_2");
			builder.put(grammarAccess.getAtLocationAccess().getXAxisAssignment_1(), "rule__AtLocation__XAxisAssignment_1");
			builder.put(grammarAccess.getAtLocationAccess().getYAxisAssignment_3(), "rule__AtLocation__YAxisAssignment_3");
			builder.put(grammarAccess.getUnitEqualsAccess().getUnitAssignment_2(), "rule__UnitEquals__UnitAssignment_2");
			builder.put(grammarAccess.getGoalAccess().getGoalAssignment_0_2(), "rule__Goal__GoalAssignment_0_2");
			builder.put(grammarAccess.getProtectLeaderAccess().getLocationValueAssignment_4(), "rule__ProtectLeader__LocationValueAssignment_4");
			builder.put(grammarAccess.getProtectLeaderAccess().getProtectionRadiusAssignment_7(), "rule__ProtectLeader__ProtectionRadiusAssignment_7");
			builder.put(grammarAccess.getProtectLeaderAccess().getProcSideAssignment_10(), "rule__ProtectLeader__ProcSideAssignment_10");
			builder.put(grammarAccess.getProtectUnitIDAccess().getLocationValueAssignment_4(), "rule__ProtectUnitID__LocationValueAssignment_4");
			builder.put(grammarAccess.getProtectUnitIDAccess().getProtectionRadiusAssignment_7(), "rule__ProtectUnitID__ProtectionRadiusAssignment_7");
			builder.put(grammarAccess.getProtectUnitIDAccess().getProcSideAssignment_10(), "rule__ProtectUnitID__ProcSideAssignment_10");
			builder.put(grammarAccess.getProtectUnitIDAccess().getProcIDAssignment_13(), "rule__ProtectUnitID__ProcIDAssignment_13");
			builder.put(grammarAccess.getProtectUnitTypeAccess().getLocationValueAssignment_4(), "rule__ProtectUnitType__LocationValueAssignment_4");
			builder.put(grammarAccess.getProtectUnitTypeAccess().getProtectionRadiusAssignment_7(), "rule__ProtectUnitType__ProtectionRadiusAssignment_7");
			builder.put(grammarAccess.getProtectUnitTypeAccess().getProcSideAssignment_10(), "rule__ProtectUnitType__ProcSideAssignment_10");
			builder.put(grammarAccess.getProtectUnitTypeAccess().getProcTypeAssignment_13(), "rule__ProtectUnitType__ProcTypeAssignment_13");
			builder.put(grammarAccess.getProtectLocationAccess().getXAxisAssignment_2(), "rule__ProtectLocation__XAxisAssignment_2");
			builder.put(grammarAccess.getProtectLocationAccess().getYAxisAssignment_4(), "rule__ProtectLocation__YAxisAssignment_4");
			builder.put(grammarAccess.getProtectLocationAccess().getLocValueAssignment_7(), "rule__ProtectLocation__LocValueAssignment_7");
			builder.put(grammarAccess.getProtectLocationAccess().getProcRadAssignment_10(), "rule__ProtectLocation__ProcRadAssignment_10");
			builder.put(grammarAccess.getGoaLocationAccess().getXAxisAssignment_2(), "rule__GoaLocation__XAxisAssignment_2");
			builder.put(grammarAccess.getGoaLocationAccess().getYAxisAssignment_4(), "rule__GoaLocation__YAxisAssignment_4");
			builder.put(grammarAccess.getGoaLocationAccess().getLocValueAssignment_7(), "rule__GoaLocation__LocValueAssignment_7");
			builder.put(grammarAccess.getAggressionAccess().getAggressionValAssignment_2(), "rule__Aggression__AggressionValAssignment_2");
			builder.put(grammarAccess.getCautionAccess().getCautionvalAssignment_2(), "rule__Caution__CautionvalAssignment_2");
			builder.put(grammarAccess.getDefualt_CAAccess().getCaTypeAssignment_0(), "rule__Defualt_CA__CaTypeAssignment_0");
			builder.put(grammarAccess.getDefualt_CAAccess().getCostAssignment_1_1(), "rule__Defualt_CA__CostAssignment_1_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private WailGrammarAccess grammarAccess;

	@Override
	protected InternalWailParser createParser() {
		InternalWailParser result = new InternalWailParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public WailGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(WailGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
