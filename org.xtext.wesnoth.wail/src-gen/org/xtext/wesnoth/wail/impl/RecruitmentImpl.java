/**
 * generated by Xtext 2.22.0
 */
package org.xtext.wesnoth.wail.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.wesnoth.wail.Recruitment;
import org.xtext.wesnoth.wail.WailPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Recruitment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.wesnoth.wail.impl.RecruitmentImpl#getUnitslist <em>Unitslist</em>}</li>
 *   <li>{@link org.xtext.wesnoth.wail.impl.RecruitmentImpl#getTurns <em>Turns</em>}</li>
 *   <li>{@link org.xtext.wesnoth.wail.impl.RecruitmentImpl#getImportance <em>Importance</em>}</li>
 *   <li>{@link org.xtext.wesnoth.wail.impl.RecruitmentImpl#getNumber <em>Number</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RecruitmentImpl extends MinimalEObjectImpl.Container implements Recruitment
{
  /**
   * The default value of the '{@link #getUnitslist() <em>Unitslist</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnitslist()
   * @generated
   * @ordered
   */
  protected static final String UNITSLIST_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUnitslist() <em>Unitslist</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnitslist()
   * @generated
   * @ordered
   */
  protected String unitslist = UNITSLIST_EDEFAULT;

  /**
   * The default value of the '{@link #getTurns() <em>Turns</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTurns()
   * @generated
   * @ordered
   */
  protected static final String TURNS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTurns() <em>Turns</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTurns()
   * @generated
   * @ordered
   */
  protected String turns = TURNS_EDEFAULT;

  /**
   * The default value of the '{@link #getImportance() <em>Importance</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImportance()
   * @generated
   * @ordered
   */
  protected static final int IMPORTANCE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getImportance() <em>Importance</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImportance()
   * @generated
   * @ordered
   */
  protected int importance = IMPORTANCE_EDEFAULT;

  /**
   * The default value of the '{@link #getNumber() <em>Number</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber()
   * @generated
   * @ordered
   */
  protected static final int NUMBER_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getNumber() <em>Number</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber()
   * @generated
   * @ordered
   */
  protected int number = NUMBER_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RecruitmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WailPackage.Literals.RECRUITMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getUnitslist()
  {
    return unitslist;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUnitslist(String newUnitslist)
  {
    String oldUnitslist = unitslist;
    unitslist = newUnitslist;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WailPackage.RECRUITMENT__UNITSLIST, oldUnitslist, unitslist));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTurns()
  {
    return turns;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTurns(String newTurns)
  {
    String oldTurns = turns;
    turns = newTurns;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WailPackage.RECRUITMENT__TURNS, oldTurns, turns));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getImportance()
  {
    return importance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setImportance(int newImportance)
  {
    int oldImportance = importance;
    importance = newImportance;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WailPackage.RECRUITMENT__IMPORTANCE, oldImportance, importance));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getNumber()
  {
    return number;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNumber(int newNumber)
  {
    int oldNumber = number;
    number = newNumber;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WailPackage.RECRUITMENT__NUMBER, oldNumber, number));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WailPackage.RECRUITMENT__UNITSLIST:
        return getUnitslist();
      case WailPackage.RECRUITMENT__TURNS:
        return getTurns();
      case WailPackage.RECRUITMENT__IMPORTANCE:
        return getImportance();
      case WailPackage.RECRUITMENT__NUMBER:
        return getNumber();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WailPackage.RECRUITMENT__UNITSLIST:
        setUnitslist((String)newValue);
        return;
      case WailPackage.RECRUITMENT__TURNS:
        setTurns((String)newValue);
        return;
      case WailPackage.RECRUITMENT__IMPORTANCE:
        setImportance((Integer)newValue);
        return;
      case WailPackage.RECRUITMENT__NUMBER:
        setNumber((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WailPackage.RECRUITMENT__UNITSLIST:
        setUnitslist(UNITSLIST_EDEFAULT);
        return;
      case WailPackage.RECRUITMENT__TURNS:
        setTurns(TURNS_EDEFAULT);
        return;
      case WailPackage.RECRUITMENT__IMPORTANCE:
        setImportance(IMPORTANCE_EDEFAULT);
        return;
      case WailPackage.RECRUITMENT__NUMBER:
        setNumber(NUMBER_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WailPackage.RECRUITMENT__UNITSLIST:
        return UNITSLIST_EDEFAULT == null ? unitslist != null : !UNITSLIST_EDEFAULT.equals(unitslist);
      case WailPackage.RECRUITMENT__TURNS:
        return TURNS_EDEFAULT == null ? turns != null : !TURNS_EDEFAULT.equals(turns);
      case WailPackage.RECRUITMENT__IMPORTANCE:
        return importance != IMPORTANCE_EDEFAULT;
      case WailPackage.RECRUITMENT__NUMBER:
        return number != NUMBER_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (unitslist: ");
    result.append(unitslist);
    result.append(", turns: ");
    result.append(turns);
    result.append(", importance: ");
    result.append(importance);
    result.append(", number: ");
    result.append(number);
    result.append(')');
    return result.toString();
  }

} //RecruitmentImpl
